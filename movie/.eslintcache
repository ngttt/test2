[{"D:\\react\\movie\\src\\index.js":"1","D:\\react\\movie\\src\\Nav.js":"2","D:\\react\\movie\\src\\ListMovie.js":"3","D:\\react\\movie\\src\\Filter.js":"4","D:\\react\\movie\\src\\MovieDetail.js":"5","D:\\react\\movie\\src\\Search.js":"6","D:\\react\\movie\\src\\FilterList.js":"7"},{"size":1030,"mtime":1609993602591,"results":"8","hashOfConfig":"9"},{"size":916,"mtime":1609956489145,"results":"10","hashOfConfig":"9"},{"size":1782,"mtime":1609439185708,"results":"11","hashOfConfig":"9"},{"size":3371,"mtime":1610004339972,"results":"12","hashOfConfig":"9"},{"size":4174,"mtime":1610011891644,"results":"13","hashOfConfig":"9"},{"size":1931,"mtime":1610006433460,"results":"14","hashOfConfig":"9"},{"size":3446,"mtime":1610006142891,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"oeakhe",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"D:\\react\\movie\\src\\index.js",[],["34","35"],"D:\\react\\movie\\src\\Nav.js",[],"D:\\react\\movie\\src\\ListMovie.js",[],"D:\\react\\movie\\src\\Filter.js",[],"D:\\react\\movie\\src\\MovieDetail.js",["36"],"import React, { useEffect, useState } from 'react';\r\nimport './MovieDetails.css';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nconst MovieDetail = ({match}) => {\r\n    const [detail, setDetail] = useState({});\r\n    const [cast, setCast] = useState([]);\r\n    \r\n    useEffect ( () => {\r\n        fetchCast();\r\n        fetchItem();\r\n    },[]);\r\n\r\n    const fetchCast = async () => {\r\n        const fetchItem = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${match.params.id}/credits?api_key=0a6d26d952bdd58d29ef7b7cb82a59db`\r\n        );\r\n        const detail = await fetchItem.json();\r\n        setCast(detail);\r\n    }\r\n\r\n    const casts = cast.cast;\r\n\r\n    console.log(casts);\r\n\r\n    const fetchItem = async () => {\r\n        const fetchItem = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${match.params.id}?api_key=0a6d26d952bdd58d29ef7b7cb82a59db&language=vi-VN`\r\n        );\r\n        const detail = await fetchItem.json();\r\n        setDetail(detail);\r\n    }\r\n\r\n    console.log(detail);\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"movie-detail\">\r\n                <img className=\"img-detail\" src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${detail.backdrop_path}`} alt=\"\"></img>\r\n                <div>\r\n                    <h1 className=\"p\">{detail.original_title}</h1>\r\n                    <h3 className=\"p\">Nội dung: {detail.overview}</h3>\r\n                    <h3 className=\"p\">Độ phổ biến: {detail.popularity}</h3>\r\n                    <h3 className=\"p\">Điểm IMDB: {detail.vote_average}</h3>\r\n                    <h3 className=\"p\">Lượt vote: {detail.vote_count}</h3>\r\n                </div>\r\n            </div>\r\n                <div className=\"movieinfo-actor-container\">\r\n                <h2>Diễn viên</h2>\r\n                <div className=\"movie-info-actor\">\r\n                <Swiper \r\n                    spaceBetween={10}\r\n                    slidesPerView={50}\r\n                    navigation\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n                    onSwiper={(swiper) => console.log(swiper)}\r\n                    onSlideChange={() => console.log('slide change')}\r\n                >\r\n                     {casts && casts.map((actor) => {\r\n                            return (\r\n                                <SwiperSlide>\r\n                                <div\r\n                                    className=\"actor-container\"\r\n                                    key={actor.cast_id}\r\n                                > \r\n                                    <div className=\"actor-image-thumbnail\">\r\n                                        <img\r\n                                            className=\"actor-image-thumbnail\"\r\n                                            src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${actor.profile_path}`}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"actor-info\">\r\n                                        <div className=\"actor-name\">\r\n                                            {actor.name} -{\" \"}\r\n                                            <i className=\"color-white\">\r\n                                                {actor.character}\r\n                                            </i>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                </SwiperSlide>);\r\n                        })}\r\n                        <div className=\"swiper-pagination\"></div>\r\n                        <div className=\"swiper-button-next\"></div>\r\n                        <div className=\"swiper-button-prev\"></div>\r\n                        </Swiper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetail;","D:\\react\\movie\\src\\Search.js",[],"D:\\react\\movie\\src\\FilterList.js",["37","38"],"import { useEffect, useState } from \"react\";\r\nimport React from 'react';\r\nimport './ListMovie.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilterList = ({match}) => {\r\n\r\n    const genre_API = [\r\n        { name: \"action\",\r\n            id: 28\r\n        },\r\n        { name: \"adventure\",\r\n            id: 12\r\n        },\r\n        { name:\"animation\",\r\n            id: 16\r\n        },\r\n        { name:\"comedy\",\r\n            id: 35\r\n        },\r\n        { name:\"crime\",\r\n            id: 80\r\n        },\r\n        { name:\"documentary\",\r\n            id:99\r\n        },\r\n        { name:\"drama\",\r\n            id: 18\r\n        },\r\n        { name:\"family\",\r\n            id: 10751\r\n        },\r\n        { name:\"fantasy\",\r\n            id: 14\r\n        },\r\n        { name:\"history\",\r\n            id: 36\r\n        },\r\n        { name:\"horror\",\r\n            id: 27\r\n        },\r\n        { name:\"music\",\r\n            id: 10402\r\n        },\r\n        { name:\"mystery\",\r\n            id: 9648\r\n        },\r\n        { name:\"romance\",\r\n            id: 10749\r\n        },\r\n        { name:\"science-fiction\",\r\n            id: 878\r\n        },\r\n        { name:\"tv-movie\",\r\n            id: 10770\r\n        },\r\n        { name:\"thriller\",\r\n            id: 53\r\n        },\r\n        { name:\"war\",\r\n            id: 10752\r\n        },\r\n        { name:\"western\",\r\n            id: 37\r\n        }\r\n    ]\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect( () => {\r\n        fetch(\"https://api.themoviedb.org/3/trending/movie/week?api_key=0a6d26d952bdd58d29ef7b7cb82a59db&language=vi-VN\")\r\n            .then(res => res.json())\r\n            .then(json =>\r\n                setItems(json.results)\r\n                )\r\n    },[]);\r\n\r\n    console.log(items)\r\n\r\n    const genre_name = (match.url).slice(8, match.url.length); \r\n\r\n    const id = genre_API.filter( genre_id => {\r\n            if (genre_id.name === genre_name)\r\n            return genre_id.id;\r\n    });\r\n\r\n    const fiteredItems = items.filter( item => {\r\n        return item.genre_ids.indexOf(id[0].id) != -1\r\n    })\r\n\r\n    console.log('fiteredItems', fiteredItems);\r\n    \r\n    return(\r\n        <div>\r\n            <h1>{genre_name}</h1>\r\n            <div className=\"list-movies\">\r\n            {fiteredItems.map( item => {\r\n                const urlPoster=`https://image.tmdb.org/t/p/w600_and_h900_bestv2${item.poster_path}`; \r\n                return (\r\n                        <div className=\"list-movie\" key = {item.id}>\r\n                            <Link to={`/${item.id}`}>\r\n                            <div className=\"vote\">\r\n                                <span className=\"vote-average\">{item.vote_average}</span>\r\n                                <span className=\"vote-count\">{item.vote_count}</span>\r\n                            </div>\r\n                            <img className=\"poster\" alt=\"\" src={urlPoster}/>\r\n                            <div className=\"name\">\r\n                                <p className=\"title\">{item.title}</p>\r\n                                <div className=\"en-date\">\r\n                                    <span className=\"language\">{item.original_language}</span>\r\n                                    <span className=\"release-date\">{item.release_date}</span>\r\n                                </div>\r\n                            </div>\r\n                            </Link>\r\n                        </div>\r\n            )})}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilterList;",["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":16,"column":7,"nodeType":"47","endLine":16,"endColumn":9,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":82,"column":43,"nodeType":"51","messageId":"52","endLine":82,"endColumn":45},{"ruleId":"53","severity":1,"message":"54","line":88,"column":49,"nodeType":"55","messageId":"56","endLine":88,"endColumn":51},{"ruleId":"41","replacedBy":"57"},{"ruleId":"43","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCast' and 'fetchItem'. Either include them or remove the dependency array.","ArrayExpression",["61"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["59"],["60"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [fetchCast, fetchItem]",{"range":"64","text":"65"},[539,541],"[fetchCast, fetchItem]"]